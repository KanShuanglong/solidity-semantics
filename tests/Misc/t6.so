// This file is used to test several rules in Solidity.

int n;
int sum;
n = 100;
sum = 0;
while (n<=110) 
{
  sum = sum + n;
  ++n;
}
if (n==111)
{
  n = n + 1;
}

for (n = 1;n<10;n++)
{
   sum=sum+1;
}

do 
{
   sum=sum+1;
   n--;
}
while (+n>=3)

//n=n-4;

if (+n>0)
{
    sum=sum+1;
}

if( !( n<=0 ) )
{
   sum=sum+1;
}

if((n>0) && (n<1))
{
    sum=sum+1;
}

n= n>3 ? n++ : n--;

if(n!=2)
{
    sum=sum+1;
}

n=n+1;

n=n**2;

n=n>>1;

address miner;
int balances;

int X[1];
X[1] = 1;
++ X[1];

struct Date {
    int year;
    int month;
    int day;

}

Date.year=2017;
Date.month++;
++Date.day;

n<<=2;
n>>=2;

contract A {
  
   int aa;
   address bb;

}
Date.day++;
Date.day--;
Date.day = 4;
Date.day += 1;
--Date.day;
balances=Date.day;
balances-=Date.month;
Date.day<<=1;

if (Date.day >= 6)
{ 
    sum=sum+1;
}

aa=Date.day/2;










