BOOST_AUTO_TEST_CASE(memory_types_initialisation)
{
	char const* sourceCode = R"(
		contract Test {
			mapping(uint=>uint) data;
			function stat() returns (uint[5])
			{
				data[2] = 3; // make sure to use some memory
			}
			function dyn() returns (uint[]) { stat(); }
			function nested() returns (uint[3][]) { stat(); }
			function nestedStat() returns (uint[3][7]) { stat(); }
		}
	)";
	compileAndRun(sourceCode, 0, "Test");

	ABI_CHECK(callContractFunction("stat()"), vector<bytes>(1, encodeRefArray(vector<u256>(5), 0)));
	ABI_CHECK(callContractFunction("dyn()"), vector<bytes>(1, encodeRefArgs(1)));
	ABI_CHECK(callContractFunction("nested()"), vector<bytes>(1, encodeRefArgs(1)));
	ABI_CHECK(callContractFunction("nestedStat()"), vector<bytes>(1, encodeRefArray(vector<u256>(3 * 7), 0)));
}