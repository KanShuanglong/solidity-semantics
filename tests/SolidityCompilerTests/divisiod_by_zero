BOOST_AUTO_TEST_CASE(divisiod_by_zero)
{
	char const* sourceCode = R"(
		contract C {
			function div(uint a, uint b) returns (uint) {
				return a / b;
			}
			function mod(uint a, uint b) returns (uint) {
				return a % b;
			}
		}
	)";
	compileAndRun(sourceCode);
	ABI_CHECK(callContractFunction("div(uint,uint)", 7, 2), encodeArgs(u256(3)));
	// throws
	ABI_CHECK(callContractFunction("div(uint,uint)", 7, 0), encodeArgs());
	ABI_CHECK(callContractFunction("mod(uint,uint)", 7, 2), encodeArgs(u256(1)));
	// throws
	ABI_CHECK(callContractFunction("mod(uint,uint)", 7, 0), encodeArgs());
}