BOOST_AUTO_TEST_CASE(invalid_enum_as_external_ret)
{
	char const* sourceCode = R"(
		contract C {
			enum X { A, B }

			function test_return() returns (X) {
				X garbled = X(5);
				return garbled;
			}
			function test_inline_assignment() returns (X _ret) {
				_ret = X(5);
			}
			function test_assignment() returns (X _ret) {
				X tmp = X(5);
				_ret = tmp;
			}
		}
	)";
	compileAndRun(sourceCode, 0, "C");
	// both should throw
	ABI_CHECK(callContractFunction("test_return()"), encodeArgs());
	ABI_CHECK(callContractFunction("test_inline_assignment()"), encodeArgs());
	ABI_CHECK(callContractFunction("test_assignment()"), encodeArgs());
}