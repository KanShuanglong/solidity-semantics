char const* sourceCode = R"(
	contract receiver {
		uint public received;
		function receive(uint x) { received += x + 1; }
		function() { received = 0x80; }
	}
	contract sender {
		function sender() { rec = new receiver(); }
		function() { savedData = msg.data; }
		function forward() returns (bool) { !rec.call(savedData); return true; }
		function clear() returns (bool) { delete savedData; return true; }
		function val() returns (uint) { return rec.received(); }
		receiver rec;
		bytes savedData;
	}
)";
compileAndRunWithoutCheck(sourceCode, 0, "sender", true);
if (false) {
	ABI_CHECK(callContractFunction("receive(uint)", 7), vector<bytes>());
	ABI_CHECK(callContractFunction("val()"), encodeArgs(0));
	ABI_CHECK(callContractFunction("forward()"), encodeArgs(true));
	ABI_CHECK(callContractFunction("val()"), encodeArgs(8));
	ABI_CHECK(callContractFunction("clear()"), encodeArgs(true));
	ABI_CHECK(callContractFunction("val()"), encodeArgs(8));
	ABI_CHECK(callContractFunction("forward()"), encodeArgs(true));
	ABI_CHECK(callContractFunction("val()"), encodeArgs(0x80));
}