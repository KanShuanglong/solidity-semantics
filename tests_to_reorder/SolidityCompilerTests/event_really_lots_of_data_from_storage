char const* sourceCode = R"(
	contract ClientReceipt {
		bytes x;
		event Deposit(uint fixeda, bytes dynx, uint fixedb);
		function deposit() {
			x.length = 3;
			x[0] = "A";
			x[1] = "B";
			x[2] = "C";
			Deposit(10, x, 15);
		}
	}
)";
compileAndRun(sourceCode);
callContractFunction("deposit()");
BOOST_REQUIRE_EQUAL(m_logs.size(), 1);
BOOST_CHECK_EQUAL(m_logs[0].address, m_contractAddress);
BOOST_CHECK_EQUAL(toHex(m_logs[0].data), toHex(encodeLogs(bigint(10), uint64_t(3), string("ABC"), bigint(15))));
BOOST_REQUIRE_EQUAL(m_logs[0].topics.size(), 1);
BOOST_CHECK_EQUAL(m_logs[0].topics[0], dev::keccak256(string("Deposit(uint,bytes,uint)")));