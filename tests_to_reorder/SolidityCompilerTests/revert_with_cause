BOOST_AUTO_TEST_CASE(revert_with_cause)
{
	char const* sourceCode = R"(
		contract D {
			function f() public {
				revert("test123");
			}
			function g() public {
				revert("test1234567890123456789012345678901234567890");
			}
		}
	)";
	compileAndRun(sourceCode, 0, "D");
	ABI_CHECK(callContractFunction("f()"), encodeArgs());
        bigint expected = fromBigEndian<bigint>(encodeLogs("test123"));
        BOOST_CHECK_EQUAL(m_status, expected);
	ABI_CHECK(callContractFunction("g()"), encodeArgs());
        expected = fromBigEndian<bigint>(encodeLogs("test1234567890123456789012345678901234567890"));
        BOOST_CHECK_EQUAL(m_status, expected);
}