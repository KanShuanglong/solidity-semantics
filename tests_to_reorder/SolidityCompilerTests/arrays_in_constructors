char const* sourceCode = R"(
    contract Base {
        uint public m_x;
        address[] m_s;
        function Base(uint x, address[] s) {
            m_x = x;
            m_s = s;
        }
        function part(uint i) returns (address) {
            return m_s[i];
        }
    }
    contract Main is Base {
        function Main(address[] s, uint x) Base(x, f(s)) {}
        function f(address[] s) returns (address[]) {
            return s;
        }
    }
    contract Creator {
        function f(uint x, address[] s) returns (uint r, address ch) {
            var c = new Main(s, x);
            r = c.m_x();
            ch = c.part(x);
        }
    }
)";
compileAndRun(sourceCode, 0, "Creator");
vector<u256> s1{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
bytes dyn1 = encodeRefArray(s1, s1.size(), 20);
u256 x = 7;
vector<bytes> args1 = encodeArgs(x, dyn1);
BOOST_REQUIRE(
    callContractFunctionNoEncoding("f(uint,address[])", args1) ==
    encodeArgs(x, s1[unsigned(x)])
);