char const* sourceCode = R"(
	contract ClientReceipt {
		event Deposit(uint fixeda, bytes dynx, uint fixedb);
		function deposit(bytes data) {
			Deposit(10, data, 15);
		}
	}
)";
compileAndRun(sourceCode);
bytes data = FixedHash<4>(dev::keccak256("deposit(bytes)")).asBytes();
callContractFunction("deposit(bytes)", encodeRefArgs(uint64_t(4), data));
BOOST_REQUIRE_EQUAL(m_logs.size(), 1);
BOOST_CHECK_EQUAL(m_logs[0].address, m_contractAddress);
BOOST_CHECK_EQUAL(toHex(m_logs[0].data), toHex(encodeLogs(bigint(10), uint64_t(4), data, bigint(15))));
BOOST_REQUIRE_EQUAL(m_logs[0].topics.size(), 1);
BOOST_CHECK_EQUAL(m_logs[0].topics[0], dev::keccak256(string("Deposit(uint,bytes,uint)")));