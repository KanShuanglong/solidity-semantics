BOOST_AUTO_TEST_CASE(index_access_with_type_conversion)
{
	// Test for a bug where higher order bits cleanup was not done for array index access.
	char const* sourceCode = R"(
			contract C {
				function f(uint x) returns (uint[256] r){
					r[uint8(x)] = 2;
				}
			}
	)";
	compileAndRun(sourceCode, 0, "C");
	// neither of the two should throw due to out-of-bounds access
	BOOST_CHECK_EQUAL(callContractFunction("f(uint)", u256(0x01))[0].size(), 256 * 9 - 8);
	BOOST_CHECK_EQUAL(callContractFunction("f(uint)", u256(0x101))[0].size(), 256 * 9 - 8);
}